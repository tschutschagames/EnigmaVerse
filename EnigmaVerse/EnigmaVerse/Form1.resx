<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cuz54frxzvP/B9XT4j0B260AAAAASUVORK5CYII=
</value>
  </data>
</root>